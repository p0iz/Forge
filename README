Forge - a modular game engine framework
=======================================

Forge aims to be a minimalistic game engine written in C++. The engine itself
uses SDL2 and STL to be as portable as possible. 

The engine runs either a REPL for interacting with the engine or as a Lua
script interpreter. Both modes share the same input parsing code.

The idea is that you extend the engine with asset plugins and custom Lua
libraries written in C++ and use them from Lua code. The intention is to add
data-driven development of materials and game objects by providing hot-reload
and other niceties in interpreted Lua code.

This project is far from finished yet and does not yet do anything
useful.


Licensing
-------

Forge source code is licensed under LGPLv3.
See COPYING and COPYING.LESSER.

All image files, audio and other digital content are
licensed under Creative Commons Attribution-ShareAlike 3.0
unless stated otherwise.
See http://creativecommons.org/licenses/by-sa/3.0/ for license.

Some models are textured using modified images from www.cgtextures.com.

Forge uses the following third-party, open-source libraries:

GLM (http://glm.g-truc.net/copying.txt)
GLEW (http://glew.sourceforge.net/glew.txt)
SDL2 (https://www.libsdl.org/license.php, zlib license)
SDL2_image (https://www.libsdl.org/projects/SDL_image/, zlib license)
SDL2_ttf (https://www.libsdl.org/projects/SDL_ttf/, zlib license)
LuaJIT (http://luajit.org/luajit.html, MIT license)


Building Forge
--------------

Forge is built using CMake.

Verified to build using CMake on MSVC2015.

Forge has the following dependencies:

Windows note: Place SDL2, LuaJIT and GLEW deps in 'deps' directory in the repo
root so that the CMake find_library command can find them. Please see
src/Forge/CMakeLists.txt and src/Forge/Graphics/Text/CMakeLists.txt
for library search paths. The CMake script will also try to be helpful.

